spring.application.name=Config-Server-Mk2

# Server configurations:
server.port=8080

# Remote configurations:

#spring.cloud.config.server.git.uri=https://github.com/Kelaskaraditya1/Remote-Configurations.git
#spring.cloud.config.server.git.username=${USERNAME}
#spring.cloud.config.server.git.password=${ACCESS_TOKEN}
#spring.cloud.config.server.git.clone-on-start=true
spring.profiles.active=jdbc
spring.cloud.config.server.jdbc.sql="select prop_key,prop_value from property where application=? and profile=? and label=?"
spring.cloud.config.server.jdbc.default-label=main

# Postgres configurations:
spring.datasource.username=postgres
spring.datasource.password=9819375722Aditya
spring.datasource.url=jdbc:postgresql://localhost:5432/remote_configurations
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.security.user.name=${DATABASE_USERNAME}
spring.security.user.password=${DATABASE_PASSWORD}
spring.jpa.show-sql=true

# docker compose configurations:

#spring.docker.compose.file=./Config-Server-Mk2/docker-compose.yml



